---
source: pluma_parser/tests/parse_success.rs
expression: "def hello { A -> B } -> String {\n  |a| \"wow!\"\n}"
---

=== Source ===
def hello { A -> B } -> String {
  |a| "wow!"
}

=== Comments ===
{}

=== AST ===
Module(0, 47) [
    TopLevelStatement(0, 47) Def(
        DefNode {
            pos: (
                0,
                47,
            ),
            visibility: Public,
            kind: Function {
                signature: [
                    (
                        Ident(4, 9) "hello",
                        TypeExprNode {
                            pos: (
                                10,
                                20,
                            ),
                            kind: Func(
                                TypeExprNode {
                                    pos: (
                                        12,
                                        13,
                                    ),
                                    kind: Single(
                                        TypeIdentifierNode {
                                            pos: (
                                                12,
                                                13,
                                            ),
                                            name: "A",
                                            generics: [],
                                            constraints: None,
                                        },
                                    ),
                                    typ: Unknown,
                                },
                                TypeExprNode {
                                    pos: (
                                        17,
                                        18,
                                    ),
                                    kind: Single(
                                        TypeIdentifierNode {
                                            pos: (
                                                17,
                                                18,
                                            ),
                                            name: "B",
                                            generics: [],
                                            constraints: None,
                                        },
                                    ),
                                    typ: Unknown,
                                },
                            ),
                            typ: Unknown,
                        },
                    ),
                ],
            },
            return_type: Some(
                TypeExprNode {
                    pos: (
                        24,
                        30,
                    ),
                    kind: Single(
                        TypeIdentifierNode {
                            pos: (
                                24,
                                30,
                            ),
                            name: "String",
                            generics: [],
                            constraints: None,
                        },
                    ),
                    typ: Unknown,
                },
            ),
            generic_type_constraints: [],
            block: Block(31, 47) ([
                Pattern(36, 37) Identifier(Ident(36, 37) "a", false),
            ]) [
                Statement(40, 44) Expr(
                    ExprNode {
                        pos: (
                            40,
                            44,
                        ),
                        kind: Literal {
                            literal: Literal(40, 44) Str("wow!"),
                        },
                        typ: Unknown,
                    },
                ),
            ],
        },
    ),
]

