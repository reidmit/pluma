---
source: pluma_parser/tests/parse_success.rs
expression: "match thing when 1 => \"one\" when 2 => \"two\" when _ => \"idk\""
---

=== Source ===
match thing when 1 => "one" when 2 => "two" when _ => "idk"

=== Comments ===
{}

=== AST ===
Module(0, 58) [
    TopLevelStatementNode {
        pos: (
            0,
            58,
        ),
        kind: Expr(
            ExprNode {
                pos: (
                    0,
                    58,
                ),
                kind: Match {
                    match_: MatchNode {
                        pos: (
                            0,
                            58,
                        ),
                        subject: ExprNode {
                            pos: (
                                6,
                                11,
                            ),
                            kind: Identifier {
                                ident: Ident(6, 11) "thing",
                            },
                            typ: Unknown,
                        },
                        cases: [
                            MatchCaseNode {
                                pos: (
                                    12,
                                    26,
                                ),
                                pattern: PatternNode {
                                    pos: (
                                        17,
                                        18,
                                    ),
                                    kind: Literal(
                                        LiteralNode {
                                            pos: (
                                                17,
                                                18,
                                            ),
                                            kind: IntDecimal(
                                                1,
                                            ),
                                        },
                                    ),
                                },
                                body: ExprNode {
                                    pos: (
                                        23,
                                        26,
                                    ),
                                    kind: Literal {
                                        literal: LiteralNode {
                                            pos: (
                                                23,
                                                26,
                                            ),
                                            kind: Str(
                                                "one",
                                            ),
                                        },
                                    },
                                    typ: Unknown,
                                },
                            },
                            MatchCaseNode {
                                pos: (
                                    28,
                                    42,
                                ),
                                pattern: PatternNode {
                                    pos: (
                                        33,
                                        34,
                                    ),
                                    kind: Literal(
                                        LiteralNode {
                                            pos: (
                                                33,
                                                34,
                                            ),
                                            kind: IntDecimal(
                                                2,
                                            ),
                                        },
                                    ),
                                },
                                body: ExprNode {
                                    pos: (
                                        39,
                                        42,
                                    ),
                                    kind: Literal {
                                        literal: LiteralNode {
                                            pos: (
                                                39,
                                                42,
                                            ),
                                            kind: Str(
                                                "two",
                                            ),
                                        },
                                    },
                                    typ: Unknown,
                                },
                            },
                            MatchCaseNode {
                                pos: (
                                    44,
                                    58,
                                ),
                                pattern: PatternNode {
                                    pos: (
                                        49,
                                        50,
                                    ),
                                    kind: Underscore,
                                },
                                body: ExprNode {
                                    pos: (
                                        55,
                                        58,
                                    ),
                                    kind: Literal {
                                        literal: LiteralNode {
                                            pos: (
                                                55,
                                                58,
                                            ),
                                            kind: Str(
                                                "idk",
                                            ),
                                        },
                                    },
                                    typ: Unknown,
                                },
                            },
                        ],
                    },
                },
                typ: Unknown,
            },
        ),
    },
]

