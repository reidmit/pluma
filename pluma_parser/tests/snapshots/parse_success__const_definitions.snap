---
source: pluma_parser/tests/parse_success.rs
expression: "const wow = \"wow!\"\nconst num = 47"
---

=== Source ===
const wow = "wow!"
const num = 47

=== Comments ===
{}

=== AST ===
Module(0, 33) [
    TopLevelStatementNode {
        pos: (
            0,
            17,
        ),
        kind: Expr(
            ExprNode {
                pos: (
                    0,
                    17,
                ),
                kind: Assignment {
                    left: ExprNode {
                        pos: (
                            0,
                            9,
                        ),
                        kind: Call {
                            call: CallNode {
                                pos: (
                                    0,
                                    9,
                                ),
                                callee: ExprNode {
                                    pos: (
                                        0,
                                        5,
                                    ),
                                    kind: Identifier {
                                        ident: Ident(0, 5) "const",
                                    },
                                    typ: Unknown,
                                },
                                args: [
                                    ExprNode {
                                        pos: (
                                            6,
                                            9,
                                        ),
                                        kind: Identifier {
                                            ident: Ident(6, 9) "wow",
                                        },
                                        typ: Unknown,
                                    },
                                ],
                                typ: Unknown,
                            },
                        },
                        typ: Unknown,
                    },
                    right: ExprNode {
                        pos: (
                            13,
                            17,
                        ),
                        kind: Literal {
                            literal: LiteralNode {
                                pos: (
                                    13,
                                    17,
                                ),
                                kind: Str(
                                    "wow!",
                                ),
                            },
                        },
                        typ: Unknown,
                    },
                },
                typ: Unknown,
            },
        ),
    },
    TopLevelStatementNode {
        pos: (
            19,
            33,
        ),
        kind: Expr(
            ExprNode {
                pos: (
                    19,
                    33,
                ),
                kind: Assignment {
                    left: ExprNode {
                        pos: (
                            19,
                            28,
                        ),
                        kind: Call {
                            call: CallNode {
                                pos: (
                                    19,
                                    28,
                                ),
                                callee: ExprNode {
                                    pos: (
                                        19,
                                        24,
                                    ),
                                    kind: Identifier {
                                        ident: Ident(19, 24) "const",
                                    },
                                    typ: Unknown,
                                },
                                args: [
                                    ExprNode {
                                        pos: (
                                            25,
                                            28,
                                        ),
                                        kind: Identifier {
                                            ident: Ident(25, 28) "num",
                                        },
                                        typ: Unknown,
                                    },
                                ],
                                typ: Unknown,
                            },
                        },
                        typ: Unknown,
                    },
                    right: ExprNode {
                        pos: (
                            31,
                            33,
                        ),
                        kind: Literal {
                            literal: LiteralNode {
                                pos: (
                                    31,
                                    33,
                                ),
                                kind: IntDecimal(
                                    47,
                                ),
                            },
                        },
                        typ: Unknown,
                    },
                },
                typ: Unknown,
            },
        ),
    },
]

