---
source: pluma_parser/tests/parse_success.rs
expression: "let b = { $0 + $1 }"
---

=== Source ===
let b = { $0 + $1 }

=== Comments ===
{}

=== AST ===
Module(0, 19) [
    TopLevelStatementNode {
        pos: (
            0,
            19,
        ),
        kind: Let(
            LetNode {
                pos: (
                    0,
                    19,
                ),
                pattern: PatternNode {
                    pos: (
                        4,
                        5,
                    ),
                    kind: Identifier(
                        Ident(4, 5) "b",
                        false,
                    ),
                },
                value: ExprNode {
                    pos: (
                        8,
                        19,
                    ),
                    kind: Block {
                        block: BlockNode {
                            pos: (
                                8,
                                19,
                            ),
                            params: [],
                            body: [
                                StatementNode {
                                    pos: (
                                        10,
                                        17,
                                    ),
                                    kind: Expr(
                                        ExprNode {
                                            pos: (
                                                10,
                                                17,
                                            ),
                                            kind: BinaryOperation {
                                                left: ExprNode {
                                                    pos: (
                                                        10,
                                                        12,
                                                    ),
                                                    kind: Identifier {
                                                        ident: Ident(10, 12) "$0",
                                                    },
                                                    typ: Unknown,
                                                },
                                                op: OperatorNode {
                                                    pos: (
                                                        13,
                                                        14,
                                                    ),
                                                    kind: Add,
                                                },
                                                right: ExprNode {
                                                    pos: (
                                                        15,
                                                        17,
                                                    ),
                                                    kind: Identifier {
                                                        ident: Ident(15, 17) "$1",
                                                    },
                                                    typ: Unknown,
                                                },
                                            },
                                            typ: Unknown,
                                        },
                                    ),
                                },
                            ],
                        },
                    },
                    typ: Unknown,
                },
            },
        ),
    },
]

