---
source: pluma_parser/tests/parse_success.rs
expression: "def Person . hello (String, Int) world () {\n  |a, b, c| \"wow!\"\n}"
---

=== Source ===
def Person . hello (String, Int) world () {
  |a, b, c| "wow!"
}

=== Comments ===
{}

=== AST ===
Module(0, 64) [
    TopLevelStatementNode {
        pos: (
            0,
            64,
        ),
        kind: Def(
            DefNode {
                pos: (
                    0,
                    64,
                ),
                visibility: Public,
                kind: Method {
                    receiver: TypeIdentifierNode {
                        pos: (
                            4,
                            10,
                        ),
                        name: "Person",
                        generics: [],
                        constraints: None,
                    },
                    signature: [
                        (
                            Ident(13, 18) "hello",
                            TypeExprNode {
                                pos: (
                                    19,
                                    32,
                                ),
                                kind: UnlabeledTuple(
                                    [
                                        TypeExprNode {
                                            pos: (
                                                20,
                                                26,
                                            ),
                                            kind: Single(
                                                TypeIdentifierNode {
                                                    pos: (
                                                        20,
                                                        26,
                                                    ),
                                                    name: "String",
                                                    generics: [],
                                                    constraints: None,
                                                },
                                            ),
                                            typ: Unknown,
                                        },
                                        TypeExprNode {
                                            pos: (
                                                28,
                                                31,
                                            ),
                                            kind: Single(
                                                TypeIdentifierNode {
                                                    pos: (
                                                        28,
                                                        31,
                                                    ),
                                                    name: "Int",
                                                    generics: [],
                                                    constraints: None,
                                                },
                                            ),
                                            typ: Unknown,
                                        },
                                    ],
                                ),
                                typ: Unknown,
                            },
                        ),
                        (
                            Ident(33, 38) "world",
                            TypeExprNode {
                                pos: (
                                    39,
                                    41,
                                ),
                                kind: EmptyTuple,
                                typ: Unknown,
                            },
                        ),
                    ],
                },
                return_type: None,
                generic_type_constraints: [],
                block: BlockNode {
                    pos: (
                        42,
                        64,
                    ),
                    params: [
                        PatternNode {
                            pos: (
                                47,
                                48,
                            ),
                            kind: Identifier(
                                Ident(47, 48) "a",
                                false,
                            ),
                        },
                        PatternNode {
                            pos: (
                                50,
                                51,
                            ),
                            kind: Identifier(
                                Ident(50, 51) "b",
                                false,
                            ),
                        },
                        PatternNode {
                            pos: (
                                53,
                                54,
                            ),
                            kind: Identifier(
                                Ident(53, 54) "c",
                                false,
                            ),
                        },
                    ],
                    body: [
                        StatementNode {
                            pos: (
                                57,
                                61,
                            ),
                            kind: Expr(
                                ExprNode {
                                    pos: (
                                        57,
                                        61,
                                    ),
                                    kind: Literal {
                                        literal: LiteralNode {
                                            pos: (
                                                57,
                                                61,
                                            ),
                                            kind: Str(
                                                "wow!",
                                            ),
                                        },
                                    },
                                    typ: Unknown,
                                },
                            ),
                        },
                    ],
                },
            },
        ),
    },
]

