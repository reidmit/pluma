---
source: pluma_parser/tests/parse_success.rs
expression: "let Person (mut name, age) = Person (\"Reid\", 26)"
---

=== Source ===
let Person (mut name, age) = Person ("Reid", 26)

=== Comments ===
{}

=== AST ===
Module(0, 48) [
    TopLevelStatement(0, 48) Let(
        Let(0, 48) Pattern(4, 26) Constructor(Ident(4, 10) "Person", Pattern(11, 26) UnlabeledTuple([Pattern(12, 20) Identifier(Ident(16, 20) "name", true), Pattern(22, 25) Identifier(Ident(22, 25) "age", false)])) ExprNode {
            pos: (
                29,
                48,
            ),
            kind: Call {
                call: Call {
                    callee: ExprNode {
                        pos: (
                            29,
                            35,
                        ),
                        kind: Identifier {
                            ident: Ident(29, 35) "Person",
                        },
                        typ: Unknown,
                    },
                    args: [
                        ExprNode {
                            pos: (
                                36,
                                48,
                            ),
                            kind: UnlabeledTuple {
                                entries: [
                                    ExprNode {
                                        pos: (
                                            38,
                                            42,
                                        ),
                                        kind: Literal {
                                            literal: Literal(38, 42) Str("Reid"),
                                        },
                                        typ: Unknown,
                                    },
                                    ExprNode {
                                        pos: (
                                            45,
                                            47,
                                        ),
                                        kind: Literal {
                                            literal: Literal(45, 47) IntDecimal(26),
                                        },
                                        typ: Unknown,
                                    },
                                ],
                            },
                            typ: Unknown,
                        },
                    ],
                },
            },
            typ: Unknown,
        },
    ),
]

