---
source: pluma_parser/tests/parse_success.rs
expression: "let (a, mut b) = (47, \"cool\")"
---

=== Source ===
let (a, mut b) = (47, "cool")

=== Comments ===
{}

=== AST ===
Module(0, 29) [
    TopLevelStatementNode {
        pos: (
            0,
            29,
        ),
        kind: Let(
            LetNode {
                pos: (
                    0,
                    29,
                ),
                pattern: PatternNode {
                    pos: (
                        4,
                        14,
                    ),
                    kind: UnlabeledTuple(
                        [
                            PatternNode {
                                pos: (
                                    5,
                                    6,
                                ),
                                kind: Identifier(
                                    Ident(5, 6) "a",
                                    false,
                                ),
                            },
                            PatternNode {
                                pos: (
                                    8,
                                    13,
                                ),
                                kind: Identifier(
                                    Ident(12, 13) "b",
                                    true,
                                ),
                            },
                        ],
                    ),
                },
                value: ExprNode {
                    pos: (
                        17,
                        29,
                    ),
                    kind: UnlabeledTuple {
                        entries: [
                            ExprNode {
                                pos: (
                                    18,
                                    20,
                                ),
                                kind: Literal {
                                    literal: LiteralNode {
                                        pos: (
                                            18,
                                            20,
                                        ),
                                        kind: IntDecimal(
                                            47,
                                        ),
                                    },
                                },
                                typ: Unknown,
                            },
                            ExprNode {
                                pos: (
                                    23,
                                    27,
                                ),
                                kind: Literal {
                                    literal: LiteralNode {
                                        pos: (
                                            23,
                                            27,
                                        ),
                                        kind: Str(
                                            "cool",
                                        ),
                                    },
                                },
                                typ: Unknown,
                            },
                        ],
                    },
                    typ: Unknown,
                },
            },
        ),
    },
]

